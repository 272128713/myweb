<?php
/**
 * Created by PhpStorm.
 * User: mandrills
 * Date: 15-10-23
 * Time: 上午9:03
 */
include_once dirname(__FILE__) . "/common/inc.php";
include_once dirname(__FILE__) . "/common/database/DatabaseManager.php";
include_once dirname(__FILE__) . "/common/RKMongo.php";
require_once dirname(__FILE__) . "/common/MMSFileManager.php";
require_once dirname(__FILE__) .'/service/repos_save_rescue_scene_image.php';

$config = new Config();
$max_file_size = $config->getLocalConfig('max_file_size'); //获取配置文件中允许上传的文件最大值（这里只允许上传.zip的压缩包）
$databaseManager = new DatabaseManager();
$fileManager = new MMSFileManager();
$rkMongo = new RKMongo();


/* print_r($_FILES);die();
Array ( 
		[upload] => Array ( 
				[name] => 美女图片.zip
				[type] => application/octet-stream 
				[tmp_name] => /tmp/phpfEyFGb   //这就是一个文件
				[error] => 0
				[size] => 992574 ) 
		)
 */

//数据库链接
if (!$db = $databaseManager->getConn()) {
    logger()->error(sprintf("Database connect fail."));
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);
}

//参数过滤
$params = array(array("ss",true),array("rsid",true));
$params = Filter::paramCheckAndRetRes($_POST, $params);
if(!$params){

    logger()->error(sprintf("params error. params is %s",v($_POST)));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}
$session = trim($params["ss"]);
$rsid = trim($params["rsid"]);
//验证session{}
$sessionArr = $databaseManager->checkSession($session);
if(!$sessionArr){
    $databaseManager->destoryConn();
    logger()->error(sprintf("Session check is fail. Error session is [%s]",$session));
    Errcode::echoErr(ErrCode::API_ERR_INVALID_SESSION,1);
}
$userId = (int)$sessionArr['user_id'];
if(!isset($_FILES['upload'])){
    $databaseManager->destoryConn();
    logger()->error(sprintf("no file params error."));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}

//$file_json = json_encode($_FILES);
//if('zip' != substr($_FILES['upload']['type'],-3)){
//    $databaseManager->destoryConn();
//    logger()->error(sprintf("no file params error: {$file_json}"));
//    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
//}

if(0 != $_FILES['upload']['error']){
    $databaseManager->destoryConn();
    logger()->error(sprintf("no file params error."));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}

if($_FILES['upload']['size'] > $max_file_size){
    $databaseManager->destoryConn();
    logger()->error(sprintf("File size exceeds the limit. max_file_size=%s",$max_file_size));
    ErrCode::echoErr(ErrCode::API_ERR_FILE_TOO_LARGE,1);
}


$uploadName = $_FILES['upload']['name'];//上传压缩包的名字
$uploadTempName = $_FILES['upload']['tmp_name']; //上传的压缩包(其实这就是该压缩包，就是一个文件)
$uploadSize = $_FILES['upload']['size'];  //上传文件的大小

$tempDir = '/tmp/'.$userId.rand(1000,9999);

if(mkdir($tempDir)){ //mkdir(path) 尝试新建一个由 path 指定的目录。mkdir() 函数创建目录。若成功，则返回 true，否则返回 false。
    $uploadTempZip = $tempDir.'/'.$uploadName; //把压缩包存取到创建好的目录
}

//var_dump($tempPath);  string '250400057868' (length=12)
if(!move_uploaded_file($uploadTempName, $uploadTempZip)){  //$uploadTempName就是一个文件, $uploadTempZip就是一个文件夹
	//move_uploaded_file(file,newloc)，file：规定要移动的文件，newloc：规定文件的新位置。函数将上传的文件移动到新位置。若成功，则返回 true，否则返回 false。
    $logger->error(sprintf("New Content move file error.fileTempName=%s , tFileName=%s",$uploadTempZip,$tempDir));
    ErrCode::echoErr(ErrCode::FILE_SEND_ERR,1);
}
$zip = new ZipArchive;
if(!$zip->open($uploadTempZip)){
    $logger->error(sprintf("Open contact zip file error. filename=%s",$uploadTempZip));
    ErrCode::echoErr(ErrCode::FILE_SEND_ERR);
}

$imgNameArr = array();
for($i = 0; $i < $zip->numFiles; $i++) {  //$zip->numFiles 获取该压缩包中被压缩的文件的个数
    $name = $zip->getNameIndex($i);   //获取被压缩的文件名字
    $imgNameArr[$i] = $name;
}

//var_dump($imgNameArr);

if(!$extract = $zip->extractTo($tempDir)) {  // $zip->extractTo($tempDir)实现解压缩
    $logger->error(sprintf("Unzip contact file error. filename=%s", $tempDir));
    ErrCode::echoErr(ErrCode::FILE_SEND_ERR,1);
}
$zip->close();
unlink($uploadTempZip);

foreach ($imgNameArr as $name) {

	/*
	getimagesize()
	getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。
	语法：
	array getimagesize( string filename )
	
	
	<?php
         $array = getimagesize("images/flower_1.jpg");
        print_r($array);
   ?>
浏览器显示如下：
Array
(
    [0] => 350
    [1] => 318
    [2] => 2
    [3] => width="350" height="318"
    [bits] => 8
    [channels] => 3
    [mime] => image/jpeg
)

	*/
    $imgInfo = getimagesize($tempDir.'/'.$name);
    $imgType= $imgInfo['mime'];
    if('image' == substr($imgType,0,5)){

        $saveFileResult = $fileManager->uploadFile($tempDir.'/'.$name,$name,
            array('mime'=>'exam_image','user_id'=>$userId)
        );
        if($saveFileResult){
            $res = saveRescueSceneImage($rsid,$saveFileResult);
            if(!$res){
                ErrCode::echoErr(ErrCode::FILE_SEND_ERR,1);
            }
        }
        unlink($tempDir.'/'.$name);
    } else {
        ErrCode::echoJson(ErrCode::SYSTEM_ERR,'failed',array());
    }
}
rmdir($tempDir);
ErrCode::echoJson('1','success',array());

function logger()
{
    return Logger::getLogger(basename(__FILE__));
}

