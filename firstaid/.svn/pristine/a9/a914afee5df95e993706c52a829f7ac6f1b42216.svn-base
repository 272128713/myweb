<?php

include_once dirname(__FILE__) . "/common/inc.php";
include_once dirname(__FILE__) . "/common/database/DatabaseManager.php";
//include_once dirname(__FILE__) . "/common/TcpConnection.php";
include_once dirname(__FILE__) . "/common/RKMongo.php";
include_once dirname(__FILE__) . "/common/MecManager.php";
include_once dirname(__FILE__) . "/service/repos_wish_add_friend.php";

$config = new Config();
$databaseManager = new DatabaseManager();
$rkMongo = new RKMongo();
$rkMongo->connect();

//数据库链接
if (!$db = $databaseManager->getConn()) {
  //  logger()->error(sprintf("Database connect fail."));
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);
}
if(!$rkMongo->connect()){
    logger()->error("mongoDB connect error.");
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);

}

$params = array(array("ss",true),array("friend_type",true),
    array('uid',true),array('content',false));


$params = Filter::paramCheckAndRetRes($_POST, $params);

if(!$params){
    logger()->error(sprintf("params error. params is %s",v($_POST)));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}

//session处理
$sessionArr = $databaseManager->checkSession(trim($params["ss"]));

//var_dump($sessionArr);

if(!$sessionArr){
    $databaseManager->destoryConn();
    logger()->error(sprintf("Session check is fail. Error session is [%s]",trim($params["ss"])));
    Errcode::echoErr(ErrCode::API_ERR_INVALID_SESSION,1);
}
//获取登录者的用户ID
$userId = $sessionArr['user_id'];

//var_dump($params);
//var_dump($sessionArr);

if(isFriend($userId,trim($params['uid']))){
    /**
     * 设备端要求更改
     */
    ErrCode::echoJson("1",'该好友已存在。',array());
}else{
    deleteFriend($userId,trim($params['uid']));
}

$authStatus = NULL;


$acc = $databaseManager->getUserInfoByUid(trim($params['uid']));

//var_dump($acc);

if(!$acc){
    echo json_encode(array('code' => '0','msg' => '未获取到用户信息。'));
}

$cc = $params["content"] ? urlencode(trim($params["content"])) : 'waf';

$msgArr = array(
    "type" => "WAF",
    "ft" => "1",
    "src" => $userId,
    "srcm" => $sessionArr['mobile'],
    "role" => '',
    "cc" => $cc,
    "time" => time()
);

$mecManager = new MecManager($userId, $msgArr, $acc);

if (!$mecManager->sendMessage()) {

    ErrCode::echoJson(0,'发送消息失败。');

}

ErrCode::echoJson(1,'发送消息成功。');


function logger()
{
    return Logger::getLogger(basename(__FILE__));
}
