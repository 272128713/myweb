<?php
/**
 * Created by PhpStorm.
 * User: mandrills
 * Date: 15-10-26
 * Time: 下午4:44
 */

include_once dirname(__FILE__) . "/common/inc.php";
include_once dirname(__FILE__) . "/common/database/DatabaseManager.php";
//include_once dirname(__FILE__) . "/common/TcpConnection.php";
include_once dirname(__FILE__) . "/common/RKMongo.php";
include_once dirname(__FILE__) . "/service/user_damoclean_serv.php";
include_once dirname(__FILE__) . "/service/tools.php";
include_once dirname(__FILE__) . "/common/MecManager.php";

$config = new Config();
$databaseManager = new DatabaseManager();
$rkMongo = new RKMongo();
$rkMongo->connect();

//数据库链接
if (!$db = $databaseManager->getConn()) {
    logger()->error(sprintf("Database connect fail."));
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);
}
if(!$rkMongo->connect()){
    logger()->error("mongoDB connect error.");
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);

}

//获取参数
$params = array(
    array("ss",true),array("longitude",true),array("latitude",true),array("address",true),array("state",false)
);

$params = Filter::paramCheckAndRetRes($_POST, $params);

if(!$params){
    logger()->error(sprintf("params error. params is %s",v($_POST)));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}

//session处理
$sessionArr = $databaseManager->checkSession(trim($params["ss"]));

//var_dump($sessionArr);

if(!$sessionArr){
    $databaseManager->destoryConn();
    logger()->error(sprintf("Session check is fail. Error session is [%s]",trim($params["ss"])));
    Errcode::echoErr(ErrCode::API_ERR_INVALID_SESSION,1);
}

$userId = (int)$sessionArr['user_id'];
$address = trim($params['address']);
$state=empty($params['state'])?true:false; //如果为true 则上传失联人位置信息

//相关业务处理
$gps = array((float)$params['longitude'],(float)$params['latitude']);

//var_dump($rkMongo->getMyLbs(1,$userId));

$result = $rkMongo->setLbsForRescueScene(1,$userId,$gps,$address);

if(!$result){
    Errcode::echoErr(ErrCode::SYSTEM_ERR,1);
}
// region 上传失联人位置信息
if($state){
    if ($rkMongo->setLinkmanLbs($userId,time(),$gps)) {
        /** 如果用户存在主动监护人并在监控中 返回id */
        if ($linkid=getUserLinkManA($userId)) {
            /** 如果用户存在电子围栏 返回围栏数据 */
            if ($res=getUserActivity_range($linkid)) {
                /** 如果用户不在围栏内 */
                if(!is_point_in_polygon($gps,$res)){
                    /** 发送推送消息 */
                    sendWarnInfo($userId,1);
                }
            }
        }
    }
}
// endregion

ErrCode::echoJson('1','success',array());

function logger()
{
    return Logger::getLogger(basename(__FILE__));
}