<?php
include_once dirname(__FILE__) . "/common/inc.php";
include_once dirname(__FILE__) . "/common/database/DatabaseManager.php";
include_once dirname(__FILE__) . "/common/RKMongo.php";
include_once dirname(__FILE__) . "/service/user_damoclean_serv.php";
include_once dirname(__FILE__) . "/service/tools.php";
include_once dirname(__FILE__) . "/common/MecManager.php";

$logger = Logger::getLogger(basename(__FILE__));

#region 获取参数
$params = array(array("ss", true), array("longitude", true),array("latitude",true));
$params = Filter::paramCheckAndRetRes($_POST, $params);

if (!$params) {
    $logger->error(sprintf("params error. params is %s", v($_POST)));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER, 1);
}

$session = trim($params["ss"]);
$longitude  = trim($params["longitude"]);
$latitude = trim($params["latitude"]);

#endregion

#region 获取数据库连接
$config = new Config();
$databaseManager = new DatabaseManager();
$rkMongo = new RKMongo();

if (!$db = $databaseManager->getConn()) {
    $logger->error(sprintf("Database connect fail."));
    ErrCode::echoErr(ErrCode::SYSTEM_ERR, 1);
}

if(!$rkMongo->connect()){
    logger()->error("mongoDB connect error.");
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);
}


#endregion

#region 检查Session合法性
$sessionArr = $databaseManager->checkSession($session);

if (!$sessionArr || !$sessionArr['user_id']) {
    $databaseManager->destoryConn();
    $logger->error(sprintf("Session check is fail. Error session is [%s]", $session));
    Errcode::echoErr(ErrCode::API_ERR_INVALID_SESSION, 1);
}
#endregion

$uid = (int)$sessionArr['user_id'];

#region 上传位置数据

/** 返回用户上次坐标 */
if ($res=$rkMongo->getMyLbs(1,$uid)) {
    /** 判断距离<5米 */
    if(getDistance($longitude,$latitude,$res[0],$res[1])<500){
        /** 长时间未移动推送消息 */
        sendWarnInfo($uid);
    }
}

if ($rkMongo->setLinkmanLbs($uid,time(),array($longitude,$latitude))) {
    /** 如果用户存在主动监护人并在监控中 返回id */
    if ($linkid=getUserLinkManA($uid)) {
        /** 如果用户存在电子围栏 返回围栏数据 */
        if ($res=getUserActivity_range($linkid)) {
            //分隔围栏数据   1212,1121-3212,13551-3212,324
            $tempsj=$res;
            $res=explode('-',$res);
            //遍历围栏数据 分配数组
            for($i=0;$i<count($res);$i++){
                //分隔围栏数据
                $res[$i]=explode(',',$res[$i]);

                $res[$i]['latitude']=$res[$i][0];
                $res[$i]['longitude']=$res[$i][1];
            }

            /** 如果用户不在围栏内 */
            if(!is_point_in_polygon(array('longitude'=>$longitude,'latitude'=>$latitude),$res)){
                /** 发送推送消息 走出电子围栏 */
                sendWarnInfo($uid,1);
                $logger->info("ZY => USER_NOT_IN_SCREEN UID:{$uid} Lon:{$longitude}  Lat:{$latitude}  RES:{$tempsj}");
            }
        }
    }

    ErrCode::echoOk("OK",1);
}else{
    ErrCode::echoErr(ErrCode::SYSTEM_ERR, 1);
}

#endregion