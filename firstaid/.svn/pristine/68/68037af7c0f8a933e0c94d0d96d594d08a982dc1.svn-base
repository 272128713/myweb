<?php
/**
 * Created by PhpStorm.
 * User: mandrills
 * Date: 15-10-26
 * Time: 下午4:44
 */

include_once dirname(__FILE__) . "/common/inc.php";
include_once dirname(__FILE__) . "/common/database/DatabaseManager.php";
//include_once dirname(__FILE__) . "/common/TcpConnection.php";
include_once dirname(__FILE__) . "/common/RKMongo.php";
include_once dirname(__FILE__) . "/service/user_damoclean_serv.php";
include_once dirname(__FILE__) . "/service/tools.php";
include_once dirname(__FILE__) . "/common/MecManager.php";

$config = new Config();
$databaseManager = new DatabaseManager();
$rkMongo = new RKMongo();
$rkMongo->connect();

//数据库链接
if (!$db = $databaseManager->getConn()) {
    logger()->error(sprintf("Database connect fail."));
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);
}
if(!$rkMongo->connect()){
    logger()->error("mongoDB connect error.");
    ErrCode::echoErr(ErrCode::SYSTEM_ERR,1);

}

//获取参数
$params = array(
    array("ss",true),array("longitude",true),array("latitude",true),array("address",true),array("state",false)
);

$params = Filter::paramCheckAndRetRes($_POST, $params);

if(!$params){
    logger()->error(sprintf("params error. params is %s",v($_POST)));
    ErrCode::echoErr(ErrCode::API_ERR_MISSED_PARAMATER,1);
}

//session处理
$sessionArr = $databaseManager->checkSession(trim($params["ss"]));


if(!$sessionArr){
    $databaseManager->destoryConn();
    logger()->error(sprintf("Session check is fail. Error session is [%s]",trim($params["ss"])));
    Errcode::echoErr(ErrCode::API_ERR_INVALID_SESSION,1);
}

$userId = (int)$sessionArr['user_id'];
$address = trim($params['address']);
$state=empty($params['state'])?true:false; //如果为true 则上传失联人位置信息

//相关业务处理
$gps = array((float)$params['longitude'],(float)$params['latitude']);
$longitude=$params['longitude'];
$latitude=$params['latitude'];


#region 上传失联人位置信息
if($state){
    //返回用户上次的坐标
//    if($userId==26000005)   logger()->info("ZY => 开始记录 当前用户ID:{$userId} 当前坐标为lon:{$longitude},lat:{$latitude}");
    if ($res=$rkMongo->getMyLbs(1,$userId)) {
//        if($userId==26000005) logger()->info("ZY => 获取用户上次坐标为 {$res[0]} , {$res[1]} 距离当前".getDistance($longitude,$latitude,$res[0],$res[1])."米");
        /** 判断距离<5米 */
        if(getDistance($longitude,$latitude,$res[0],$res[1])<5){
//            if($userId==26000005) logger()->info("ZY => 未移动触发推送");
            /** 长时间未移动推送消息 */
            sendWarnInfo($userId,0,$longitude,$latitude);
        }
    }

    if ($rkMongo->setLinkmanLbs($userId,time(),array($longitude,$latitude))) {
//        if($userId==25035858)logger()->info("ZY => 成功上传位置");
        /** 如果用户存在主动监护人并在监控中 返回id */
        if ($linkid=getUserLinkManA($userId)) {
//            if($userId==25035858)logger()->info("ZY => 存在关系 关系ID为:".$linkid);
            /** 如果用户存在电子围栏 返回围栏数据 */
            if ($res=getUserActivity_range($linkid)) {
//                if($userId==25035858)logger()->info("ZY => 存在电子围栏 围栏数据:".$res);
                //分隔围栏数据   1212,1121-3212,13551-3212,324
                $tempsj=$res;
                $res=explode('-',$res);
                //遍历围栏数据 分配数组
                for($i=0;$i<count($res);$i++){
                    //分隔围栏数据
                    $res[$i]=explode(',',$res[$i]);

                    $res[$i]['latitude']=$res[$i][0];
                    $res[$i]['longitude']=$res[$i][1];
                }
                /** 如果用户不在围栏内 */
                if(!is_point_in_polygon(array('longitude'=>$longitude,'latitude'=>$latitude),$res)){
                    /** 发送推送消息 走出电子围栏 */
//                    if($userId==25035858) logger()->info("ZY => 用户不在电子围栏内 触发警报推送");
                    sendWarnInfo($userId,1,$longitude,$latitude);
                }//else{
//                    if($userId==25035858)logger()->info("ZY => 用户在电子围栏内 无操作");
//                }
            }
        }
    }
}
#endregion

//上传个人位置
$result = $rkMongo->setLbsForRescueScene(1,$userId,$gps,$address);

if(!$result){
    Errcode::echoErr(ErrCode::SYSTEM_ERR,1);
}

ErrCode::echoJson('1','success',array());

function logger()
{
    return Logger::getLogger(basename(__FILE__));
}